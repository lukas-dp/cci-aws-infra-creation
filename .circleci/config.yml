# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy --template-file template.yml --stack-name prod-${CIRCLE_WORKFLOW_ID}

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["07:ad:65:b2:6f:68:7a:b6:49:63:2c:14:76:15:12:69"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            apk add --no-cache openssh-client && ssh-keyscan 3.143.116.91 > ~/.ssh/known_hosts
            ansible-playbook -i inventory.txt playbook.yml
          # https://circleci.com/docs/2.0/gh-bb-integration/#establishing-the-authenticity-of-an-ssh-host

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl
      - run:
          name: Check if website responds
          command: |
            URL="http://3.143.116.91:3000"
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

  smoke_test_aws:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Simulate error
          command: |
            return 1
      - destroy_environment



# Orchestrate or schedule a set of jobs
workflows:
  infrastructure_creation:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      # - smoke_test
      - smoke_test_aws:
          requires:
            - create_infrastructure
